[
{
	"uri": "/1-create-new-aws-account/",
	"title": "Create new AWS account",
	"tags": [],
	"description": "",
	"content": "Content:\n Create an AWS account Add payment method Verify your phone number Select Support Plan Wait for your account to be activated  Create an AWS account  Go to the Amazon Web Service homepage page. Select Create an AWS Account in the upper right corner.  Note: If you don\u0026rsquo;t see Create an AWS Account, select Sign In to the Console then select Create a new AWS Account.    Enter email information and AWS account name  Complete information.  Confirm the code sent from the email.  After successful email authentication. You complete the account information.  Complete the account registration documents.   You can choose Personal or Business account  Add payment method  Enter your credit card information and select Verify and Add.  Note: You can choose a different address for your account by selecting Use a new address before Verify and Add.    Verify your phone number  Enter the phone number. Enter the security check code then select Call me now. AWS will contact and verify account opening.  Select Support Plan  In the Select a support plan page, select an effective plan, to compare plans, see Compare AWS Support Plans.  Wait for your account to be activated  After selecting Support plan, the account is usually activated after a few minutes, but the process can take up to 24 hours. You will still be able to log in to your AWS account at this time, the AWS Home page may show a “Complete Sign Up” button during this time, even if you have completed all the steps in the registration section. After receiving an email confirming your account has been activated, you can access all AWS services.  "
},
{
	"uri": "/",
	"title": "Setting up an AWS account",
	"tags": [],
	"description": "",
	"content": "Creating your first AWS account Overview In this first lab, you will be creating your new AWS account and use Multi-factor Authentication (MFA) to improve your account security. Next, you will create an Administrator Group and Admin User to manage access to resources in your account instead of using the root user. Finally, we will step through account authentication with AWS Support in the event you experience authentication problems.\nAWS Account An AWS account is the basic container for all the AWS resources you can create as an AWS customer. By default, each AWS account will have a root user. The root user has full access within your AWS account, and root user permissions cannot be limited. When you first create your AWS account, you will be assessing it as the root user.\nAs a best practice, do not use the AWS account root user for any task where it\u0026rsquo;s not required. Instead, create a new IAM user for each person that requires administrator access. Thereafter, the users in the administrators user group should set up the user groups, users, and so on, for the AWS account. All future interaction should be through the AWS account\u0026rsquo;s users and their own keys instead of the root user. However, to perform some account and service management tasks, you must log in using the root user credentials.\n\rMulti-Factor Authentication (MFA) MFA adds extra security because it requires users to provide unique authentication from an AWS supported MFA mechanism in addition to their regular sign-in credentials when they access AWS websites or services.\nIAM User Group An IAM user group is a collection of IAM users. User groups let you specify permissions for multiple users, which can make it easier to manage the permissions for those users. Any user in that user group automatically has the permissions that are assigned to the user group.\nIAM User An IAM user is an entity that you create in AWS to represent the person or application that uses it to interact with AWS. A user in AWS consists of a name and credentials. Please note that an IAM user with administrator permissions is not the same thing as the AWS account root user.\nAWS Support AWS Basic Support offers all AWS customers access to our Resource Center, Service Health Dashboard, Product FAQs, Discussion Forums, and Support for Health Checks – at no additional charge. Customers who desire a deeper level of support can subscribe to AWS Support at the Developer, Business, or Enterprise level.\nCustomers who choose AWS Support gain one-on-one, fast-response support from AWS engineers. The service helps customers use AWS\u0026rsquo;s products and features. With pay-by-the-month pricing and unlimited support cases, customers are freed from long-term commitments. Customers with operational issues or technical questions can contact a team of support engineers and receive predictable response times and personalized support.\nMain Content  Creating a new AWS Account Setting up MFA for the AWS Account root user Creating an Administrator Accounts and Groups Getting support for Account Authentication  "
},
{
	"uri": "/2-mfa-setup-for-aws-user-root/1-virtual-mfa-device/",
	"title": "Virtual MFA Device",
	"tags": [],
	"description": "",
	"content": "\rTo enable MFA, you need to log in to AWS using the root user.\n\rEnable virtual MFA device through Console To set up and activate a virtual MFA device:\n Sign in to the AWS Console. In the upper right corner, you will see your account name, click on it and select My Security Credentials.  Expand Multi-factor authentication (MFA) and select Assign MFA.  In the Select MFA device interface, enter Device name   Select MFA device as Authenticator app Select Next  Install a compatible app on your phone. MFA App List.  You can find Authenticator from the Google Chrome extension. Then select Add to Chrome  You use the MFA code to fill in the confirmation.  Perform a QR code scan.  After scanning the QR code, enter 2 codes of MFA.  After entering the code select Add MFA  Complete more MFA.  "
},
{
	"uri": "/2-mfa-setup-for-aws-user-root/",
	"title": "MFA for AWS Accounts",
	"tags": [],
	"description": "",
	"content": "In the day step, you use three different MFA devices. One is virtual MFA devices (apps) on smartphones such as Microsoft Authenticator, Google Authenticator, and Okta Verify. The second is a hard U2F security key. Three are other hardware MFA devices such as Gemalto security keys.\nContent  Setup with virtual MFA device Setup with U2F Security Key Setup with other hardware MFA device  "
},
{
	"uri": "/2-mfa-setup-for-aws-user-root/2-u2f-security-key/",
	"title": "U2F Security Key",
	"tags": [],
	"description": "",
	"content": "Content\n Enable U2F security key via Console  If you do not have a hardware device, you can skip the steps below.\n\rEnable U2F security key via Console U2F Security Key is an open authentication protocol that allows users to access online services with a unique security key without using any software.\n  Sign in to the AWS Console.\n  In the upper right corner, you will see your account name, select and select My Security Credentials then expand Multi-factor authentication (MFA).\n  To manage U2F security keys, you must have permissions from the following set of permissions. in the left sidebar, select Policies then select Create policy, select JSON tab and paste the below:\n  {  \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,  \u0026#34;Statement\u0026#34;: [  {  \u0026#34;Sid\u0026#34;: \u0026#34;AllowManageOwnUserMFA\u0026#34;,  \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,  \u0026#34;Action\u0026#34;: [  \u0026#34;iam:DeactivateMFADevice\u0026#34;,  \u0026#34;iam:EnableMFADevice\u0026#34;,  \u0026#34;iam:GetUser\u0026#34;,  \u0026#34;iam:ListMFADevices\u0026#34;,  \u0026#34;iam:ResyncMFADevice\u0026#34;  ],  \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:iam::*:user/${aws:username}\u0026#34;  },  {  \u0026#34;Sid\u0026#34;: \u0026#34;DenyAllExceptListedIfNoMFA\u0026#34;,  \u0026#34;Effect\u0026#34;: \u0026#34;Deny\u0026#34;,  \u0026#34;NotAction\u0026#34;: [  \u0026#34;iam:EnableMFADevice\u0026#34;,  \u0026#34;iam:GetUser\u0026#34;,  \u0026#34;iam:ListMFADevices\u0026#34;,  \u0026#34;iam:ResyncMFADevice\u0026#34;  ],  \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:iam::*:user/${aws:username}\u0026#34;,  \u0026#34;Condition\u0026#34;: {  \u0026#34;BoolIfExists\u0026#34;: {  \u0026#34;aws:MultiFactorAuthPresent\u0026#34;: \u0026#34;false\u0026#34;  }  }  }  ] } Select Next: Tags. This is a screen of Tags, a tool used to differentiate AWS resources. Select Next: Review. This is the screen that allows you to review the permission set you are creating. Enter the permission set name (eg MFAHardDevice) and select Create policy.  In the left sidebar, select Dashboard and then select Enable MFA.   Expand Multi-factor authentication (MFA) then select Active MFA.\n  In Manage MFA Device, select U2F security key then press Continue.\n  Plug the U2F security key into the computer\u0026rsquo;s USB port.\n  Click the U2F security key, and then select Close when U2F is successfully set up.  "
},
{
	"uri": "/3-create-admin-user-and-group/",
	"title": "Create Admin Group and Admin User",
	"tags": [],
	"description": "",
	"content": "Create Admin Group   Login to Dashboard at AWS Web Service page\n  Click on the account name in the upper right corner and select My Security Credentials\n  In case you do not see the My Security Credentials menu, you can click on the search icon and enter IAM. Then click on the IAM service to access the IAM service management interface.\n\rIn the left sidebar, select User Groups then select Create Group  Under Name the group, enter a Group name (Example: AdminGroup) and scroll down.  In the Attach permissions policies section, type AdministratorAccesss in the search bar and click it. Finally, select Create Group.  Finish creating admin group.  Create Admin User  In the left sidebar, select Users then select Add User  Enter the User name (Example: AdminUser).  Click AWS Management Console access. Click Programmatic Access. Click Custom password and then type a password of your choice (note: you must remember this password for future logins). Uncheck the item User must create a new password\u0026hellip;. Click Next:Permissions.    By selecting AWS Management Console access, you have just authorized the IAM User to access AWS through the AWS web console.\nRemoving the User must create a new password\u0026hellip; entry allows the first user to log in to the IAM User without having to create a new password.\n\rClick the Add user to group tab and click the AdminGroup that we created earlier.   Click Next:Tags\n Tags are optional to organize, track, or control user access, so you can add tags or not.    Click Next:Review.\n  Check the information and select Create user  Complete user creation. You can download.csv to store the Access key.  Create admin user successfully.  Check user details.  After creating a user, you will see a dialog box to download the access key and secret key information. This is the information used to perform Programmatic access to AWS resources through the AWS CLI and AWS SDK. We will not be using it for the time being.\n\rLogin to AdminUser  Return to the IAM service, and select Users in the left sidebar. Click on the name of the IAM User you just selected. In the Summary section, select the Security credentials tab. Look at the line Summary: Console sign-in link and copy the link next to it. This is the link you use to log in to the IAM User.  Open an incognito tab of the browser you are using and paste the link into the search bar.  Incognito tab login allows you to log in to AWS with an IAM User without having to log out of the root user in the main tab.\n\rEnter the correct IAM User name and password that you entered in the create IAM User section above. Click sign in.  Congratulations, you have successfully accessed your account as an IAM User AdminUser.  In The next step, we will switch to using IAM Role to improve the security of your account.  "
},
{
	"uri": "/2-mfa-setup-for-aws-user-root/3-other-hardware-mfa-device/",
	"title": "Hard MFA Device",
	"tags": [],
	"description": "",
	"content": "Content\n Enable other hardware MFA device through the Console  Enable other hardware MFA device through the Console  Sign in to the AWS Console. In the upper right corner, you will see your account name, select and select My Security Credentials then expand Multi-factor authentication (MFA).  To manage U2F security keys, you must have permissions from the following set of permissions. in the left sidebar, select Policies then select Create policy, select JSON tab and paste the below:  {  \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,  \u0026#34;Statement\u0026#34;: [  {  \u0026#34;Sid\u0026#34;: \u0026#34;AllowManageOwnUserMFA\u0026#34;,  \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,  \u0026#34;Action\u0026#34;: [  \u0026#34;iam:DeactivateMFADevice\u0026#34;,  \u0026#34;iam:EnableMFADevice\u0026#34;,  \u0026#34;iam:GetUser\u0026#34;,  \u0026#34;iam:ListMFADevices\u0026#34;,  \u0026#34;iam:ResyncMFADevice\u0026#34;  ],  \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:iam::*:user/${aws:username}\u0026#34;  },  {  \u0026#34;Sid\u0026#34;: \u0026#34;DenyAllExceptListedIfNoMFA\u0026#34;,  \u0026#34;Effect\u0026#34;: \u0026#34;Deny\u0026#34;,  \u0026#34;NotAction\u0026#34;: [  \u0026#34;iam:EnableMFADevice\u0026#34;,  \u0026#34;iam:GetUser\u0026#34;,  \u0026#34;iam:ListMFADevices\u0026#34;,  \u0026#34;iam:ResyncMFADevice\u0026#34;  ],  \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:iam::*:user/${aws:username}\u0026#34;,  \u0026#34;Condition\u0026#34;: {  \u0026#34;BoolIfExists\u0026#34;: {  \u0026#34;aws:MultiFactorAuthPresent\u0026#34;: \u0026#34;false\u0026#34;  }  }  }  ] } Select Next: Tags. This is a screen of Tags, a tool used to differentiate AWS resources. Select Next: Review. This is the screen that allows you to review the permission set you are creating. Enter the permission set name (eg MFAHardDevice) and select Create policy.  In the left sidebar, select Dashboard and then select Enable MFA.   Expand Multi-factor authentication (MFA) then select Active MFA.\n  In Manage MFA Device, select Other Hardware MFA Device then click Continue.\n  Enter Serial Number on the back of the device.\n  Enter MFA code 1 then wait 30 seconds and enter MFA code 2. Select Assign MFA.  "
},
{
	"uri": "/4-verify-new-account/",
	"title": "Account Authentication Support",
	"tags": [],
	"description": "",
	"content": "Content:\n Check the information Create a support case with AWS Support  During the AWS account creation process, at the contact phone number verification step, sometimes there will be a situation where no SMS or calls from AWS will be received. In that case, follow these steps to complete the account information verification:\nCheck the information First, double-check your account information and make sure it\u0026rsquo;s entered correctly:\n You have entered the phone number information and selected the correct international area code to receive the call. If you use a mobile phone, check your phone to make sure you are still within range to receive calls. Payment method information has been entered correctly. Make sure that the phone number you provide in your AWS account is reachable.\n\r  Create a support case with AWS Support After checking that the information is correct but still has not received the verification call, AWS Support will assist you to activate your account manually.\n Go to the AWS Support console, select Create case.  Select Account and billing support and enter the support information:  Type: select Account. Category: select Activation. Subject: briefly write down your situation (eg Did not receive an SMS message or call for verification) Description: Provide details of the situation encountered and information about the time you need support to activate the account. Attachments: Attach an image describing the authentication step you are facing.    Under Contact options, select Chat under Contact methods.  Select Submit.  5. The AWS Support team will contact and assist in activating your account.\nYou can create a support request with AWS Support even if your account is not activated.\n\r"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]