[
{
	"uri": "//localhost:1313/1-create-new-aws-account/",
	"title": "Create New AWS Account",
	"tags": [],
	"description": "",
	"content": "Introduction This document provides detailed instructions for creating and activating a new AWS account. Creating an AWS account is the first and important step to be able to use Amazon Web Services cloud services.\nTable of Contents Introduction Table of Contents AWS Account Creation Guide Step 1: Access the registration page Step 2: Enter basic information Step 3: Complete registration information Step 4: Email verification Step 5: Set up password Step 6: Choose account type Add payment method Verify phone number Select Support Plan Wait for account activation Reference documentation AWS Account Creation Guide Step 1: Access the registration page Go to the Amazon Web Services homepage\nClick the Create an AWS Account button in the upper right corner of the page\nNote: If you don\u0026rsquo;t see the Create an AWS Account button, click Sign In to the Console then select Create a new AWS Account\nStep 2: Enter basic information Fill in your email address Enter your AWS account name (AWS account name) Click Verify email address Step 3: Complete registration information Fill in all required personal information\nStep 4: Email verification Check the inbox of the registered email Enter the verification code sent to your email Step 5: Set up password After successful email verification, proceed to set up a password for your account\nStep 6: Choose account type Complete the account registration profile Choose the appropriate account type: Personal (Individual) Business (Enterprise) Add payment method Enter your complete credit card or debit card information Click Verify and Add to confirm Note: If you want to use a different billing address, select Use a new address before clicking Verify and Add\nVerify phone number Enter your phone number Enter the security check code Click Call me now AWS will call the registered phone number and provide a PIN code Enter the received PIN code to complete verification Select Support Plan On the Select a support plan page, choose a support plan that fits your needs To compare support plans, refer to Compare AWS Support Plans Suggestion: For beginners, the Basic Support plan (free) is usually a suitable choice\nWait for account activation After selecting a support plan, your account is usually activated within a few minutes However, the activation process can sometimes take up to 24 hours During the waiting period, you can still log in to your AWS account The AWS homepage may display a \u0026ldquo;Complete Sign Up\u0026rdquo; button even though you have completed all registration steps You will receive a confirmation email when your account is fully activated After receiving the confirmation email, you can access and use all AWS services Reference documentation AWS Documentation Getting Started with AWS AWS Free Tier AWS Support Plans "
},
{
	"uri": "//localhost:1313/1-create-new-aws-account/1.1-find-account-id/",
	"title": "View AWS Account Identifiers",
	"tags": [],
	"description": "",
	"content": "Finding Account ID when signed in as Root User You can find the AWS account ID using either the AWS Management Console or the AWS Command Line Interface (AWS CLI). In the console, the location of the account ID depends on whether you\u0026rsquo;re signed in as the Root User or an IAM User. The account ID remains the same regardless of how you sign in.\nMinimum Permissions To perform the following steps, you must have at least the following IAM permissions:\nWhen you sign in as the Root User, you don\u0026rsquo;t need any IAM permissions. In the navigation bar on the upper right, choose your account name or number and then choose Security credentials. Tip: If you don\u0026rsquo;t see the Security credentials option, you might be signed in as a federated user with an IAM role, instead of as an IAM user. In this case, look for the entry Account and the account ID number next to it.\nUnder the Account details section, the account number appears next to AWS account ID.\nFinding AWS Account ID as an IAM User Minimum Permissions To perform the following steps, you must have at least the following IAM permission:\naws-portal:ViewAccount In the navigation bar on the upper right, choose your user name and then choose Security credentials.\nTip: If you don\u0026rsquo;t see the Security credentials option, you might be signed in as a federated user with an IAM role, instead of as an IAM user. In this case, look for the entry Account and the account ID number next to it.\nAt the top of the page, under Account details, the account number appears next to AWS account ID.\nFind the Canonical User ID for your AWS Account You can find the canonical user ID for your AWS account using the AWS Management Console or the AWS CLI. The canonical user ID for an AWS account is unique to that account. You can retrieve the canonical user ID for your AWS account as the Root User, a federated user, or an IAM User.\nFind the Canonical ID as Root User or IAM User To find the canonical user ID for your account when signed in to the console as the Root User or IAM User:\nMinimum Permissions To perform the following steps, you must have at least the following IAM permissions:\nWhen you run the command as the Root User, you don\u0026rsquo;t need any IAM permissions. When you sign in as an IAM User, you must have: aws-portal:ViewAccount Sign in to the AWS Management Console as the Root User or IAM User.\nIn the navigation bar on the upper right, choose your account name or number, and then choose Security credentials.\nTip: If you don\u0026rsquo;t see the Security credentials option, you might be signed in as a federated user with an IAM role, instead of as an IAM user. In this case, look for the entry Account and the account ID number next to it.\nUnder the Account details section, the canonical user ID appears next to Canonical user ID. You can use your canonical user ID to configure Amazon S3 access control lists (ACLs).\nFind the Canonical ID as a Federated User with IAM Role To find the canonical ID for your account when signed in to the console as a federated user with an IAM Role:\nMinimum Permissions You must have permission to list and view Amazon S3 buckets.\nSign in to the AWS Management Console as a federated user with an IAM Role. In the Amazon S3 console, choose a bucket name to view details about that bucket. Choose the Permissions tab. In the Access control list section, under Bucket owner, the canonical ID for your AWS account will appear. "
},
{
	"uri": "//localhost:1313/2-mfa-setup-for-aws-user-root/1-virtual-mfa-device/",
	"title": "Virtual MFA Device",
	"tags": [],
	"description": "",
	"content": "Introduction AWS account security is one of the most important factors to protect your cloud resources. Multi-Factor Authentication (MFA) provides an additional layer of security beyond regular login credentials. This document guides you through setting up a virtual MFA device for your AWS account.\nOverview of MFA in AWS MFA requires users to provide two or more authentication factors when signing in:\nLogin credentials (username and password) Authentication code from a registered MFA device Requirements Note: To enable MFA, you need to sign in to AWS using the root account.\nTypes of MFA Devices Supported by AWS AWS supports various types of MFA devices:\nAuthenticator apps FIDO security keys Hardware token devices Setting Up Virtual MFA Device Step 1: Sign in to AWS Management Console Go to AWS Console Sign in with your account credentials Step 2: Access Security Settings In the upper right corner of the screen, click on your account name Select My Security Credentials from the dropdown menu Step 3: Set Up MFA On the Security Credentials page, expand the Multi-factor authentication (MFA) section Click Assign MFA Step 4: Select MFA Device Type In the Select MFA device interface: Enter a name for your MFA device Select Authenticator app as the MFA device type Click Next Step 5: Install Authenticator App Install an authenticator app on your mobile device or browser List of AWS-compatible MFA apps Step 6: Install Authenticator on Chrome (Optional) If you want to use an authenticator app on Chrome browser:\nGo to Authenticator on Chrome Web Store Click Add to Chrome to install Step 7: Scan QR Code Use the installed authenticator app to scan the QR code displayed on the AWS screen Step 8: Confirm Setup After scanning the QR code, the authenticator app will start generating codes Enter two consecutive authentication codes in the corresponding fields on AWS Click Add MFA Step 9: Complete Setup Confirm the request to add the MFA device Step 10: Confirm Success After completion, you will see a confirmation message that MFA setup was successful Using MFA From the next login onwards, after entering your login credentials, you will be prompted to enter an authentication code from your registered MFA device.\nTroubleshooting Lost MFA device: Contact AWS Support for assistance in recovering access Authentication code not working: Ensure your device has accurate time synchronization Reference Documentation AWS IAM MFA Documentation AWS Security Best Practices "
},
{
	"uri": "//localhost:1313/",
	"title": "AWS Account Setup",
	"tags": [],
	"description": "",
	"content": "AWS Account Setup This document provides detailed guidance on the AWS account setup process from the beginning, including account creation, security configuration, and administrative access setup. This guide helps you start using AWS safely and effectively.\nTable of Contents Create your first AWS account Set up MFA for Root account Create Administrator Group and Administrator User Account verification support Explore AWS Management Console Create your first AWS account Overview In this section, you will create a new AWS account, set up MFA (Multi-factor Authentication) to protect your account. Next, you will create an Administrator Group and Administrator User to manage AWS resources instead of using the root account. Finally, if you encounter issues during verification, you will be guided to contact AWS Support.\nBasic Concepts AWS Account An AWS Account is the means to access and use AWS services. Each account has a default root user with unrestricted administrative privileges. When you first sign in, you will use this root user account.\nNote: AWS recommends not using the root user for daily tasks. Instead, create IAM Users with appropriate administrative permissions to minimize security risks.\nMFA (Multi-factor Authentication) MFA is an advanced security feature for AWS accounts. When activated, you will need to enter an OTP (One-time Password) code each time you sign in to your AWS account, creating a second layer of protection beyond your regular password.\nIAM Group IAM Group is AWS\u0026rsquo;s user management tool that allows you to group multiple IAM Users together. All IAM Users in the same group will inherit the permissions assigned to that group, making permission management easier.\nIAM User IAM User is a user entity in AWS. Each IAM User has their own login credentials and is granted specific access permissions to AWS resources. IAM Users are suitable for providing long-term access for people or applications that need to access AWS.\nAWS Support AWS Support is AWS\u0026rsquo;s customer support service unit that helps resolve technical issues and provides account verification support.\nAWS Management Console AWS Management Console is a web interface that allows you to manage and interact with AWS services visually.\nMain Content Creating an AWS Account Step 1: Access the AWS registration page Open a web browser and go to aws.amazon.com Click the Create an AWS Account button in the upper right corner of the page Step 2: Fill in account information Enter your email address Create an AWS account name Click Verify email address and verify your email Step 3: Create password Create a strong password for your AWS account The password must meet the following requirements: Minimum 8 characters, maximum 128 characters Include at least one uppercase letter (A-Z) Include at least one lowercase letter (a-z) Include at least one number (0-9) Include at least one special character (!@#$%^\u0026amp;*()_+-=[]{}|;\u0026rsquo;:\u0026quot;,./\u0026lt;\u0026gt;?) Step 4: Fill in contact information Choose account type (Personal or Business) Fill in complete personal or business information Read and accept the AWS Customer Agreement Step 5: Fill in payment information Enter valid credit card information Note: AWS will perform a small authorization hold to verify your card Step 6: Verify identity Enter your mobile phone number Choose verification method (SMS or voice call) Enter the verification code sent to your phone Step 7: Choose support plan Select an appropriate AWS support plan (Basic, Developer, Business, or Enterprise) Basic plan is free and suitable for beginners Step 8: Complete the registration process Click the Complete sign up button Wait for confirmation email from AWS (may take a few minutes to several hours) After receiving the confirmation email, you can sign in to the AWS Management Console Set up MFA for Root Account Step 1: Sign in to AWS Management Console Go to console.aws.amazon.com Sign in with your root account email and password Step 2: Access account management page Click on your account name in the upper right corner Select My Security Credentials from the dropdown menu Step 3: Set up MFA Expand the Multi-factor authentication (MFA) section Click Activate MFA Choose MFA device type: Virtual MFA device: Use authenticator apps like Google Authenticator Hardware TOTP token: Use dedicated hardware devices Security key: Use FIDO security keys Step 4: Configure MFA for virtual device (most common) Install an authenticator app on your phone (Google Authenticator, Authy, Microsoft Authenticator, etc.) Click Show QR code and scan the QR code with your authenticator app Enter two consecutive authentication codes from the authenticator app Click Assign MFA Step 5: Backup MFA information Save the QR code or secret key provided during setup Store this information securely in case you lose your device Create Administrator Group and Administrator User Step 1: Access IAM service Sign in to AWS Management Console with root account Search for \u0026ldquo;IAM\u0026rdquo; in the service search bar Select IAM (Identity and Access Management) service Step 2: Create Admin Group In the IAM dashboard, click User groups in the left menu Click the Create group button Enter a name for the group (e.g., \u0026ldquo;Administrators\u0026rdquo;) Find and select the AdministratorAccess policy in the policies list Click Create group to complete Step 3: Create Admin User In the IAM dashboard, click Users in the left menu Click the Add users button Enter username (e.g., \u0026ldquo;AdminUser\u0026rdquo;) Select AWS Management Console access in the Access type section Configure password: Choose Custom password and enter a strong password Uncheck \u0026ldquo;User must create a new password at next sign-in\u0026rdquo; if you don\u0026rsquo;t want to change the password on first login Step 4: Add User to Admin Group On the \u0026ldquo;Add user to group\u0026rdquo; page, select the Administrators group created in the previous step Click Next: Tags (Optional) Add tags if needed Click Next: Review Review the information and click Create user Step 5: Save login information Download or copy the login information (including sign-in URL, username, and password) Store this information securely Step 6: Set up MFA for Admin User Return to the Users list in IAM Select the username you just created Select the Security credentials tab In the Multi-factor authentication (MFA) section, click Assign MFA device Follow the same steps as when setting up MFA for the root account Account verification support Common issues when verifying accounts Not receiving confirmation email Credit card not accepted Identity verification failed Unable to sign in after registration Contact AWS Support Go to aws.amazon.com/support Click Create case Select Account and billing support support type Fill in complete information about your issue Click Submit to send the support request Explore AWS Management Console Overview of AWS Management Console Top navigation bar: Services menu: Quick access to AWS services Search bar: Search for services, documentation, and resources Region: Select AWS region to work in Account: Manage account settings and sign out Support: Access documentation and support Basic AWS services for beginners EC2: Virtual servers S3: Object storage RDS: Relational databases Lambda: Serverless computing CloudWatch: Monitoring and logging Personalizing AWS Management Console Create custom homepage:\nClick Edit in the upper right corner of the console homepage Add, remove, or rearrange widgets as needed Click Save to save changes Create bookmarks for frequently used services:\nClick the star next to the service name in the services menu Bookmarked services will appear in the Recently visited services section Reference Documentation AWS Identity and Access Management AWS Security Best Practices AWS Support Plans Getting Started with AWS "
},
{
	"uri": "//localhost:1313/5-explore-and-configure-the-aws-management-console/5.1-config-default-region/",
	"title": "Configure Default Region",
	"tags": [],
	"description": "",
	"content": "Set up Default Region In this step, we will select a specific AWS Region to manage resources! A Region is a collection of AWS resources located in the same geographic area.\nIn the example shown in the image below, we are currently in the Virginia Region (us-east-1)\nHowever, since our customers are typically end users in Vietnam, the nearest Region would be Singapore (ap-southeast-1) to reduce latency\nPerform Region Switch Click on the triangle symbol next to Region Virginia (us-east-1) Select Region Singapore (ap-southeast-1) The result shows on the navigation bar that we are now in Region Singapore (ap-southeast-1) Additionally, to ensure that we are always in the correct Region that matches the organization\u0026rsquo;s requirements every time we log in to the AWS console, setting up a default Region is essential.\nConfigure Default Region Click on the gear icon on the navigation bar Select More user settings In the Localization and default Region section, select Edit In the Default Region section, click on the triangle icon Select Asia Pacific (Singapore) ap-southeast-1, then select Save settings Result: Note: Setting up the default Region is very important to avoid accidentally deploying services in other AWS Regions that do not align with your initial planning.\nCongratulations! You have completed the lab.\n"
},
{
	"uri": "//localhost:1313/2-mfa-setup-for-aws-user-root/",
	"title": "MFA for AWS Accounts",
	"tags": [],
	"description": "",
	"content": "Introduction Multi-Factor Authentication (MFA) is an important security layer for your AWS account. By requiring a second authentication factor in addition to your password, MFA protects your AWS account from unauthorized access even if your password is compromised.\nBenefits of MFA Enhanced Security: Requires a second authentication factor beyond password Risk Reduction: Protects account even when login credentials are compromised Compliance: Meets security compliance requirements of many organizations Supported MFA Device Types 1. Virtual MFA Device Uses an authenticator app on your smartphone to generate OTP (One-Time Password) codes.\nSupported Applications:\nMicrosoft Authenticator Google Authenticator Okta Verify Authy 2. U2F Security Key Physical security key that follows the FIDO Universal 2nd Factor (U2F) standard.\nSupported Devices:\nYubiKey Feitian HyperFIDO 3. Other Hardware MFA Device Hardware device that generates authentication codes.\nSupported Devices:\nGemalto SafeNet IDProve RSA SecurID Setup Guide 1. Setting Up Virtual MFA Device Sign in to AWS Management Console Access IAM Dashboard Select \u0026ldquo;Users\u0026rdquo; and choose your username Select \u0026ldquo;Security credentials\u0026rdquo; tab In \u0026ldquo;Assigned MFA device\u0026rdquo; section, select \u0026ldquo;Manage\u0026rdquo; Select \u0026ldquo;Virtual MFA device\u0026rdquo; and press \u0026ldquo;Continue\u0026rdquo; Download and install one of the supported authenticator apps on your phone Scan the QR code with the app or enter the setup code manually Enter two consecutive authentication codes from the app Select \u0026ldquo;Assign MFA\u0026rdquo; to complete 2. Setting Up U2F Security Key Sign in to AWS Management Console Access IAM Dashboard Select \u0026ldquo;Users\u0026rdquo; and choose your username Select \u0026ldquo;Security credentials\u0026rdquo; tab In \u0026ldquo;Assigned MFA device\u0026rdquo; section, select \u0026ldquo;Manage\u0026rdquo; Select \u0026ldquo;Security Key\u0026rdquo; and press \u0026ldquo;Continue\u0026rdquo; Plug the U2F security key into your computer\u0026rsquo;s USB port Press the button on the key when prompted Name the security key Select \u0026ldquo;Assign MFA\u0026rdquo; to complete 3. Setting Up Other Hardware MFA Device Sign in to AWS Management Console Access IAM Dashboard Select \u0026ldquo;Users\u0026rdquo; and choose your username Select \u0026ldquo;Security credentials\u0026rdquo; tab In \u0026ldquo;Assigned MFA device\u0026rdquo; section, select \u0026ldquo;Manage\u0026rdquo; Select \u0026ldquo;Hardware MFA device\u0026rdquo; and press \u0026ldquo;Continue\u0026rdquo; Enter the serial number of the MFA device Enter two consecutive authentication codes from the device Select \u0026ldquo;Assign MFA\u0026rdquo; to complete Troubleshooting Lost MFA Device If you lose access to your MFA device:\nContact your organization\u0026rsquo;s AWS administrator For root accounts, use recovery method through registered email and phone number See AWS documentation on recovering access when MFA device is lost Synchronization Error If virtual MFA device is out of sync:\nCheck if the time on your device is accurate Use the resync option in AWS Management Console If issues persist, remove and re-setup the MFA device Hands-on Labs Set up MFA for AWS root account Set up MFA for IAM User Test authentication with MFA Reference Documentation AWS IAM User Guide - Using MFA AWS Security Best Practices AWS Well-Architected Framework - Security Pillar FAQs Q: Can I register multiple MFA devices for one account?\nA: For IAM users, you can register up to 8 MFA devices of any combination of supported types.\nQ: Does MFA cost anything?\nA: AWS does not charge for using MFA. However, you may need to pay for hardware devices.\nQ: Is MFA required for root accounts?\nA: While not mandatory, AWS strongly recommends protecting root accounts with MFA.\n"
},
{
	"uri": "//localhost:1313/2-mfa-setup-for-aws-user-root/2-u2f-security-key/",
	"title": "U2F Security Key",
	"tags": [],
	"description": "",
	"content": "Content\nEnable U2F Security Key via Console If you do not have a hardware device, you can skip the steps below.\nEnable U2F Security Key via Console U2F Security Key is an open authentication protocol that allows users to access online services using a unique physical security key without needing to install software.\nSign in to the AWS Management Console.\nIn the upper right corner, select your account name → My Security Credentials, then expand Multi-factor authentication (MFA).\nTo manage U2F security keys, you need permissions from the following permission set.\nIn the left sidebar, select Policies → Create policy → JSON tab and paste the following:\n{ \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;AllowManageOwnUserMFA\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;iam:DeactivateMFADevice\u0026#34;, \u0026#34;iam:EnableMFADevice\u0026#34;, \u0026#34;iam:GetUser\u0026#34;, \u0026#34;iam:ListMFADevices\u0026#34;, \u0026#34;iam:ResyncMFADevice\u0026#34; ], \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:iam::*:user/${aws:username}\u0026#34; }, { \u0026#34;Sid\u0026#34;: \u0026#34;DenyAllExceptListedIfNoMFA\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Deny\u0026#34;, \u0026#34;NotAction\u0026#34;: [ \u0026#34;iam:EnableMFADevice\u0026#34;, \u0026#34;iam:GetUser\u0026#34;, \u0026#34;iam:ListMFADevices\u0026#34;, \u0026#34;iam:ResyncMFADevice\u0026#34; ], \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:iam::*:user/${aws:username}\u0026#34;, \u0026#34;Condition\u0026#34;: { \u0026#34;BoolIfExists\u0026#34;: { \u0026#34;aws:MultiFactorAuthPresent\u0026#34;: \u0026#34;false\u0026#34; } } } ] } Select Next: Tags. This is a screen of Tags, a tool used to differentiate AWS resources. Select Next: Review. This is the screen that allows you to review the permission set you are creating. Enter the permission set name (eg MFAHardDevice) and select Create policy. In the left sidebar, select Dashboard and then select Enable MFA. Expand Multi-factor authentication (MFA) then select Active MFA.\nIn Manage MFA Device, select U2F security key then press Continue.\nPlug the U2F security key into the computer\u0026rsquo;s USB port.\nClick the U2F security key, and then select Close when U2F is successfully set up. "
},
{
	"uri": "//localhost:1313/1-create-new-aws-account/1.2-update-account/",
	"title": "Update Account",
	"tags": [],
	"description": "",
	"content": "Update Account Name, Email Address, or Password for Root User Edit AWS Account Information To change your AWS account name, Root User password, or Root User email address, follow the steps below. Your email address and password are used as login credentials as the Root User of your AWS account.\nNote: Changes to your AWS account may take up to four hours to apply across all services.\nEdit Account Name, Root User Password, or Email Address Minimum permissions required: To perform the following steps, you must have at least the following IAM permissions:\nYou must sign in as the Root User of your AWS account. No additional IAM permissions are required. These steps cannot be performed by an IAM user or IAM role. Sign in to the AWS Management Console using your AWS account\u0026rsquo;s email address and password.\nIn the upper right corner of the console, click on your account name or account number, then select Account.\nOn the Account page, find Account settings and click Edit. You will be prompted to re-authenticate for security reasons.\nNote: If the Edit option is not displayed, this indicates that you are not signed in as the Root User of your AWS account. Account settings cannot be modified when signed in as an IAM user or IAM role.\nOn the Update Account Settings page, select Edit next to the field you want to update.\nFor Name: On the Update Your Account Name page, enter the new account name in the New account name field, then click Save changes.\nNote: If you encounter issues modifying the AWS account name, check whether there is a Service Control Policy (SCP) in AWS Organizations that restricts access to aws-portal or denies the iam:UpdateAccountName action.\nFor Email: On the Update Your Email Address page, provide the required information for New email address, Confirm new email address, and confirm your current password. Then, click Save changes. A verification code will be sent to your new email address from no-reply@verify.signin.aws. On the Verify Your New Email Address page, enter the verification code you received via email, then click Save changes.\nNote: The verification code may take up to 5 minutes to receive. If you don\u0026rsquo;t find the email in your inbox, remember to check your spam and junk folders.\nFor Password: On the Update Your Password page, fill in the fields for Current password, New password, and Confirm new password. Then, click Save changes. For additional guidance and best practices on Root User password management, refer to Change the password for the AWS account Root User.\nWhen you have completed all desired changes, select Done.\nThat\u0026rsquo;s it! You\u0026rsquo;ve successfully updated your AWS account information.\n"
},
{
	"uri": "//localhost:1313/5-explore-and-configure-the-aws-management-console/5.2-search-with-the-aws-management-console/",
	"title": "Search Services with AWS Management Console",
	"tags": [],
	"description": "",
	"content": "Search with the AWS Management Console In this lab, we will explore the search box on the navigation bar. The search box provides a search tool for AWS services and features, documentation, and the AWS Marketplace.\nTo open the console for a service, we will use the search box in the navigation bar of the AWS Management Console and enter the service name, for example: EC2 Then, select the EC2 service Result: The EC2 console page is displayed Select the AWS logo displayed in the upper left corner to return to the console home page. Additionally, we will try searching for another service\nIn the search box in the navigation bar of AWS Management Console, type mongoDB. We will receive results with:\nMarketplace is a curated digital catalog that customers can use to find, buy, deploy, and manage third-party software, data, and services to build solutions and run their businesses. For example, here are various MongoDB Atlas versions for customers to choose from and deploy on AWS\nBlogs to update the latest technology information and news related to AWS For example, here are blog posts that guide how to build and connect MongoDB with other AWS services\nDocumentation to provide documents related to services on AWS For example, here are documents related to MongoDB\nCongratulations! You have completed the lab.\n"
},
{
	"uri": "//localhost:1313/3-create-admin-user-and-group/",
	"title": "Create Admin Group and Admin User",
	"tags": [],
	"description": "",
	"content": "Create Admin Group Sign in to AWS Management Console at https://aws.amazon.com/\nClick on your account name in the upper right corner and select My Security Credentials\nNote: If you don\u0026rsquo;t see the My Security Credentials menu, you can search for and select the IAM service to access the IAM console.\nIn the left navigation pane, select User Groups and click Create Group\nIn the User group name section, enter a group name (e.g., AdminGroup)\nIn the Attach permissions policies section, search for and select the AdministratorAccess policy. Then select Create Group\nThe group has been created successfully\nCreate Admin User In the navigation pane, select Users and click Add users\nConfigure user information:\nEnter User name (e.g., AdminUser) Select AWS Management Console access Select Programmatic access Select Custom password and enter a password Uncheck User must create a new password at next sign-in Click Next: Permissions Select the Add user to group tab and choose the AdminGroup you created\nClick Next: Tags (Tags are optional for organizing and managing resources)\nClick Next: Review\nReview the information and select Create user\nDownload the .csv file containing the access key (if needed)\nUser has been created successfully\nView detailed user information\nNote: After creating the user, AWS will display the access key ID and secret access key. This is important information for accessing AWS through AWS CLI and AWS SDK.\nSign in with Admin User In the IAM console, select Users in the navigation pane\nSelect the IAM user you just created\nIn the Security credentials tab, copy the console sign-in link\nOpen a new incognito tab and access the sign-in link\nEnter login information:\nIAM user name Password you created Click Sign in Successfully signed in with IAM user\nReference Documentation IAM User and AWS Sign-in An IAM user is an entity created within an AWS account that has permissions to interact with AWS resources. IAM users can sign in using:\nAccount ID/alias User name Password User names can be regular names (zhang) or email addresses (zhang@example.com), cannot contain spaces but can contain:\nUppercase and lowercase letters Numbers Special characters: + = , . @ _ - Create Access Key for Root User Required Permissions Must sign in as root user (cannot be performed with IAM user or role) Steps to Perform Sign in to AWS Management Console using the root user\u0026rsquo;s email and password\nClick on the account name in the upper right corner, select Security Credentials\nIn the Access keys section, select Create access key\nNote: If you don\u0026rsquo;t see this option, you may have reached the access key limit. You need to delete an existing key before creating a new one.\nOn the Alternatives to root user access keys page, read the security recommendations. Check the checkbox and select Create access key\nOn the Retrieve access key page:\nAccess key ID will be displayed Click Show to view the Secret access key Copy and save both Access key ID and Secret key in a secure location Or download the rootkey.csv file to save the information Click Done to complete\nRecommendation: Delete or deactivate access keys when no longer in use to ensure security.\nDelete Access Key for Root User Required Permissions Must sign in as root user (cannot be performed with IAM user or role) Steps to Perform Sign in to AWS Management Console as root user\nClick on the account name in the upper right corner, select Security Credentials\nIn the Access keys section, find the key to delete:\nClick Delete in the Actions menu to permanently delete Or click Deactivate to temporarily disable In the confirmation dialog:\nEnter the Access key ID to confirm Click Delete to complete Note about deactivating keys:\nDeactivated keys can be reactivated later No need to change ID and Secret API calls using deactivated keys will be rejected with \u0026ldquo;access denied\u0026rdquo; error Best Practices:\nLimit use of root user access keys Create IAM users with appropriate permissions instead of using root user Always secure access key information Delete or deactivate unused keys Regularly rotate access keys Use AWS CloudTrail to monitor access key activity Multi-Factor Authentication (MFA) Details When MFA is enabled, users need to:\nSign in normally with username/password Enter authentication code from MFA device AWS supports these MFA device types:\nVirtual MFA (Google Authenticator, Authy) Hardware MFA token U2F security key Recommendation: Enable MFA for both root user and IAM users to enhance security.\nAdditional References:\nIAM User Guide AWS Security Best Practices AWS CloudTrail Documentation "
},
{
	"uri": "//localhost:1313/2-mfa-setup-for-aws-user-root/3-other-hardware-mfa-device/",
	"title": "Hardware MFA Device",
	"tags": [],
	"description": "",
	"content": "Content\nEnable Other Hardware MFA Device through Console Enable Other Hardware MFA Device through Console Sign in to the AWS Console. In the upper right corner, you will see your account name, select it and choose My Security Credentials then expand Multi-factor authentication (MFA). To manage hardware MFA devices, you must have permissions from the following permission set. In the left sidebar, select Policies then select Create policy, select JSON tab and paste the following: { \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;AllowManageOwnUserMFA\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;iam:DeactivateMFADevice\u0026#34;, \u0026#34;iam:EnableMFADevice\u0026#34;, \u0026#34;iam:GetUser\u0026#34;, \u0026#34;iam:ListMFADevices\u0026#34;, \u0026#34;iam:ResyncMFADevice\u0026#34; ], \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:iam::*:user/${aws:username}\u0026#34; }, { \u0026#34;Sid\u0026#34;: \u0026#34;DenyAllExceptListedIfNoMFA\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Deny\u0026#34;, \u0026#34;NotAction\u0026#34;: [ \u0026#34;iam:EnableMFADevice\u0026#34;, \u0026#34;iam:GetUser\u0026#34;, \u0026#34;iam:ListMFADevices\u0026#34;, \u0026#34;iam:ResyncMFADevice\u0026#34; ], \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:iam::*:user/${aws:username}\u0026#34;, \u0026#34;Condition\u0026#34;: { \u0026#34;BoolIfExists\u0026#34;: { \u0026#34;aws:MultiFactorAuthPresent\u0026#34;: \u0026#34;false\u0026#34; } } } ] } Select Next: Tags. This is the Tags screen, a tool used to differentiate AWS resources. Select Next: Review. This is the screen that allows you to review the permission set you are creating. Enter the permission set name (e.g., MFAHardDevice) and select Create policy. In the left sidebar, select Dashboard and then select Enable MFA. Expand Multi-factor authentication (MFA) then select Active MFA.\nIn Manage MFA Device, select Other Hardware MFA Device then press Continue.\nEnter the Serial Number found on the back of the device.\nEnter MFA code 1, then wait 30 seconds and enter MFA code 2. Select Assign MFA. "
},
{
	"uri": "//localhost:1313/1-create-new-aws-account/1.3-aws-account-alias/",
	"title": "Managing AWS Account Alias for IAM Sign-In",
	"tags": [],
	"description": "",
	"content": "Managing AWS Account Alias for IAM Sign-In Introduction The AWS account Root User and AWS Identity and Access Management (IAM) users in the account sign in through a web URL. If you want the URL for IAM users to contain your company name (or another easy-to-remember identifier) instead of the AWS account ID, you can create an alias for the account.\nSign-in URL The sign-in page URL for your account\u0026rsquo;s IAM users has the following format by default:\nhttps://Your_Account_ID.signin.aws.amazon.com/console/ If you create an AWS account alias for your AWS account ID, the IAM user sign-in URL will look like the following example:\nhttps://Your_Account_Alias.signin.aws.amazon.com/console/ The original URL containing your AWS account ID remains active and can still be used after you create your AWS account alias.\nTip: To create a bookmark for your account sign-in page in your web browser, we recommend that you manually type the sign-in URL in the bookmark entry. Don\u0026rsquo;t use your web browser\u0026rsquo;s \u0026ldquo;bookmark this page\u0026rdquo; feature, as it can capture session-specific information that might interfere with future visits to the page.\nImportant Notes Your AWS account can have only one alias. Creating a new alias will overwrite the previous alias, and the URL containing the previous alias will stop working. The account alias must be unique across all Amazon Web Services. The alias can only contain lowercase letters, digits, and hyphens. Create or Edit Account Alias Minimum Permissions To perform the following steps, you must have at least the following IAM permissions:\niam:ListAccountAliases iam:CreateAccountAlias Steps to perform Sign in to the AWS Management Console as the AWS account Root User or an IAM user or role with the minimum permissions. Open the IAM console at https://console.aws.amazon.com/iam/. In the navigation pane, choose Dashboard. In the right pane under AWS account, next to Account Alias, choose Create. If an alias already exists, choose Edit. In the dialog box, enter the new or updated name you want to use for your alias, then choose Save changes. Note: You can only have one alias associated with your AWS account at a time. If you create a new alias, the previous alias will be deleted, and the sign-in URL associated with the previous alias will stop working.\nDelete Account Alias Minimum Permissions To perform the following steps, you must have at least the following IAM permissions:\niam:ListAccountAliases iam:CreateAccountAlias iam:DeleteAccountAlias Steps to perform Sign in to the AWS Management Console as the AWS account Root User or an IAM user or role with the minimum permissions. Open the IAM console at https://console.aws.amazon.com/iam/. In the navigation pane, choose Dashboard. In the right pane under AWS account, next to Account Alias, choose Delete. "
},
{
	"uri": "//localhost:1313/5-explore-and-configure-the-aws-management-console/5.3-add-and-remove-favorites/",
	"title": "Add and Remove Favorite AWS Services",
	"tags": [],
	"description": "",
	"content": "Add And Remove Favorites In this lab, we will explore the AWS Management Console to add AWS services to the favorites list and remove services from the favorites list.\nAdd Services to Favorites List On the navigation bar, select Services to open the full list of services. Select All services Use the \u0026ldquo;scroll bar\u0026rdquo; on the right to move up and down to search for services. Then, hover your mouse over the desired service, and a star icon will appear on the left - click the star. For example, select EC2 Repeat the above steps to add the S3 service Repeat the above steps to add the RDS service To view the results, from the left navigation menu, select the Favorites section Result Additionally, favorites are also pinned and displayed on the navigation bar at the top of the console window. Now we can quickly navigate to our favorite services by selecting the icon on the navigation bar, for example: S3\nAdditionally, we can also quickly add favorite services through the search box\nIn the search box, enter the name of any service, for example: CloudWatch\nClick the star icon next to the CloudWatch service\nResult Remove Services from Favorites List On the navigation bar, select Services to open the full list of services. In the Favorites section, uncheck the star next to the name of the service you want to remove. For example: uncheck S3 and RDS services Result: only EC2 is shown as the favorite service Additionally, the pinned favorites displayed on the navigation bar at the top of the console window now only shows the EC2 service Congratulations! You have completed the lab.\n"
},
{
	"uri": "//localhost:1313/4-verify-new-account/",
	"title": "Account Verification Support",
	"tags": [],
	"description": "",
	"content": "Content:\nCheck Information Create Support Case with AWS Support During the AWS account creation process, at the contact phone number verification step, sometimes you may not receive SMS messages or calls from AWS. In that case, follow these steps to complete the account information verification:\nCheck Information First, double-check your account information and ensure it has been entered correctly:\nYou have entered the phone number information and selected the correct international country code to receive the call. If you are using a mobile phone, check your phone to ensure you are still within coverage area to receive calls. Payment method information has been entered correctly. Make sure that the phone number you provide in your AWS account is reachable.\nCreate Support Case with AWS Support After verifying that the information is correct but you still have not received the verification call, AWS Support will assist you in activating your account manually.\nGo to the AWS Support console, select Create case. Select Account and billing support and enter the support information: Type: select Account. Category: select Activation. Subject: briefly describe your situation (e.g., Did not receive an SMS message or call for verification) Description: Provide details of the situation you encountered and information about when you need support to activate the account. Attachments: Attach an image describing the verification step you are experiencing issues with. In the Contact options section, select Chat under Contact methods. Select Submit. The AWS Support team will contact you and assist with activating your account. You can create a support request with AWS Support even if your account has not been activated yet.\n"
},
{
	"uri": "//localhost:1313/1-create-new-aws-account/1.4-close-account/",
	"title": "Close Standalone AWS Account",
	"tags": [],
	"description": "",
	"content": "Close Standalone AWS Account Considerations Before Closing Your AWS Account Before closing your AWS account, you should consider the following:\nYour Agreement with AWS Closing your AWS account serves as notice to us that you want to cancel the AWS customer agreement or other agreement with AWS that governs your AWS account, solely with respect to this specific AWS account. If you reopen your AWS account during the post-closure period (within 90 days after you close the account), you agree that the same agreement terms will govern your access to and use of the service offerings through your reopened AWS account.\nAWS Management Console Access Access to the AWS Management Console for a closed AWS account will be restricted. During the post-closure period, you can still sign in to your AWS account to view past billing information and access AWS Support. You cannot access any other AWS services or start any new AWS services in the closed account.\nFind and Terminate Active Resources To avoid unexpected charges, before closing your account, we recommend that you review and terminate all resources currently running in the account.\nSign in to the AWS Management Console. On the navigation bar, choose Services. On the Services page, search for Resource Groups. In Tag Editor, under Regions, select the regions where you have created resources, or choose All regions. In Resource types, select All supported resource types. Choose Search Resources. If search results appear, then there are still active resources on the account. Note: AWS Resource Groups search results don\u0026rsquo;t show AWS Marketplace subscriptions. To manage subscriptions, see Managing your software.\nYou should archive your content and delete resources as appropriate. For additional guidance on how to retrieve your content, see the documentation for that service.\nFor more information, see How do I check for active resources that I no longer need on my AWS account?\nExisting Content and Services Still in Use After Closing After the post-closure period, AWS automatically deletes any remaining content in your AWS account and attempts to terminate any AWS services that are still in use. For more information about the post-closure period, see Accessing your AWS account after you close it.\nYour Payment Method We charge you through your designated payment method for any usage fees incurred before you closed your AWS account. We issue any refunds that might be due through the same payment method. If you have active subscriptions (such as Reserved Instances that you pay for monthly), even after your account is closed, you might continue to be charged for the subscription through your designated payment method until the subscription expires or is sold according to the terms governing the subscription. These charges and refunds might occur after you close your account.\nAdditionally, if you reopen your account, you might be charged for the cost of running AWS services (that you didn\u0026rsquo;t stop before closing your account) during the post-closure period. Closing your AWS account doesn\u0026rsquo;t affect payment methods that you use on Amazon.com or other Amazon websites.\nOn-Demand Charges During the post-closure period, billing for On-Demand charges stops. However, you will be billed for any usage that has accrued up until the time you closed your account. You\u0026rsquo;ll be charged for that usage at the beginning of the next month. Additionally, if you purchased any subscriptions with ongoing payment obligations, you might continue to be charged for them after your account is closed.\nImportant: You will continue to incur costs if you don\u0026rsquo;t stop or delete your resources.\nDomains Registered with Amazon Route 53 Domains that are registered with Route 53 are not deleted automatically. When you close your AWS account, you have three options:\nYou can disable automatic renewal, and the domains will be automatically deleted when the registration period expires. For more information, see Enabling or Disabling Automatic Renewal for a Domain.\nYou can transfer the domains to another AWS account. For more information, see Transferring a Domain to a Different AWS Account.\nYou can transfer the domains to another domain registrar. For more information, see Transferring a Domain from Route 53 to Another Registrar.\nIf you have already closed the account, you can open a case with AWS Support to get help with disabling automatic renewal or transferring your domains. For more information, see Contacting AWS Support About Domain Registration Issues. There is no charge to open a case for domain registration issues.\nCharges if You Reopen Your AWS Account If you reopen your AWS account during the post-closure period, you might be charged for the cost of any AWS services that weren\u0026rsquo;t stopped or resources that weren\u0026rsquo;t deleted before you closed your account.\nExample: You reopen your AWS account 30 days after closure. Your AWS account had only an active t2.micro Amazon EC2 instance at closure. In this example, imagine that the price for a t2.micro Amazon EC2 instance in your AWS Region is $0.01 per hour. In this case, you might be charged for 30 days x 24 hours x $0.01 per hour = $7.20 for your AWS services.\nCross-Account Access to the Account You\u0026rsquo;re Closing After you close your AWS account, any access requests to your closed account\u0026rsquo;s AWS services from other AWS accounts will fail. This occurs even if you have granted the other accounts permission to access your account\u0026rsquo;s AWS services. If you reopen your AWS account, other AWS accounts can again access your account\u0026rsquo;s AWS services and resources if you granted the necessary permissions to the other AWS accounts.\nRemoving Amazon VPC Peering Connection AWS doesn\u0026rsquo;t delete Amazon Virtual Private Cloud (Amazon VPC) peering connections when you close one of the accounts participating in the VPC peering connection. Any traffic destined for the VPC peering connection originating from other active accounts is dropped because AWS terminates instances and deletes any security groups in the closed account. To remove the VPC peering connection, delete it from your account using the Amazon VPC console, AWS Command Line Interface (AWS CLI), or Amazon EC2 API. For more information, see Deleting a VPC Peering Connection.\nTroubleshooting Errors When Closing an AWS Account If you receive an error message while trying to close your AWS account, you can contact your account representative or contact AWS Support to open a billing or account support case for assistance. Common reasons why you might not be able to close your AWS account include:\nYour account is the management account of an organization in AWS Organizations with active member accounts. To close the management account, you must first remove all member accounts from the organization.\nYou have unpaid invoices for your account.\nYou are not signed in to the account as the AWS account Root User.\nYou are an active AWS Marketplace seller.\nHow to Close Your AWS Account Minimum Permissions To perform the following steps, you must have at least the following IAM permissions:\nYou must sign in as the AWS account Root User, which requires no additional IAM permissions. You cannot perform these steps as an IAM user or role. Review Considerations Before Closing Your AWS Account Sign in as the Root User of the account you want to close, using the email address and password associated with the account. Note that signing in as an AWS Identity and Access Management (IAM) user or role will not allow you to close an account.\nOn the navigation bar in the upper-right corner, select your account name (or alias), and then choose Account.\nScroll to the end of the Account page to the Close Account section. Make sure you read and understand the text next to the check boxes. Once you close an AWS account, you will no longer have access to AWS services using that account.\nSelect the check boxes to accept the terms, and then choose Close Account.\nIn the confirmation box, choose Close Account.\nAccessing Your AWS Account After Closure After closing your AWS account, you will no longer have access to AWS services using that account. However, during the 90-day period following account closure (called the Post-Closure Period), you can:\nView past billing information for your AWS account. Access AWS Support. During the Post-Closure Period, AWS may retain any content you didn\u0026rsquo;t delete and any active AWS services. To access remaining content or AWS services, you can reopen your account within the Post-Closure Period.\nReopening Your AWS Account To reopen your AWS account, contact AWS Support. If you choose to reopen your account, you can access retained content and AWS services that were active before account closure. Note that you might incur charges for running these AWS services during the Post-Closure Period. Use the AWS Pricing Calculator to estimate these costs.\nAfter the Post-Closure Period Once the Post-Closure Period ends, AWS will permanently close your AWS account. Any undeleted content will be permanently deleted, and any active AWS services will be stopped. Service attributes necessary for billing and administration purposes may be retained.\nPlease note that you cannot create a new AWS account using the same alias or email address that was registered to your closed AWS account.\n"
},
{
	"uri": "//localhost:1313/5-explore-and-configure-the-aws-management-console/5.4create-and-use-dashboard-widgets/",
	"title": "Create and Use Dashboard Widgets",
	"tags": [],
	"description": "",
	"content": "Create and use dashboard widgets In this lab, we will explore \u0026ldquo;display widgets\u0026rdquo; that show important information about our AWS environment and provide shortcuts to AWS services.\nWe can customize our experience by adding and removing these widgets, rearranging them, or resizing them as needed.\nSelect the AWS logo in the left corner of the screen to return to Console Home\nTo add widgets, select the + Add widgets icon in the right corner of the screen The Add widgets window is displayed on the right side of the screen In the Add widgets menu, select the widget title that you want to add, then drag that widget onto the dashboard. For example: the \u0026ldquo;recently visited services\u0026rdquo; widget (Recently visited) Move widgets to a new position on the dashboard Customize the size of widgets Additionally, other widgets such as: Managed instances, Ops summary, Patch compliance do not yet display corresponding values, and AWS has provided guidance to Go to Systems Manager, Go to OpsCenter, Go to Patch Manager for setup Note: Managed instances, Ops summary, Patch compliance are all part of the AWS Systems Manager service. You can learn more through the link What is AWS Systems Manager\nCongratulations! You have completed the lab.\n"
},
{
	"uri": "//localhost:1313/5-explore-and-configure-the-aws-management-console/",
	"title": "Explore and Configure AWS Management Console",
	"tags": [],
	"description": "",
	"content": "\nOverview of AWS Management Console AWS Management Console provides a secure web interface to access and manage AWS services. It supports authentication through both AWS account root user credentials and AWS Identity and Access Management (IAM) credentials.\nℹ️ Information\nAlthough AWS Management Console provides a user-friendly web interface, all interactions are converted to AWS API calls behind the scenes.\nFor more detailed information, refer to: What is the AWS Management Console?\nKey Features and Navigation AWS Management Console includes the following key features:\nConfigure Default Region Search AWS Services with AWS Management Console Add and Remove Favorite AWS Services Create and Use Dashboard Widgets 💡 Pro Tip\nCustomize your AWS Management Console experience by adding frequently used services to favorites and creating personalized dashboard widgets for quick access to important metrics and resources.\n⚠️ Warning\nFor enhanced security, always use IAM users instead of the root account for daily operations. The root account should only be used for initial setup and critical account management tasks.\nℹ️ Information\nFor AWS Command Line Interface (CLI) operations, refer to the lab: Using AWS CLI on Amazon EC2 (Windows/Ubuntu)\n"
},
{
	"uri": "//localhost:1313/6-support-cases/",
	"title": "Create and Manage Support Cases in AWS",
	"tags": [],
	"description": "",
	"content": "Create and Manage Support Cases in AWS This guide covers how to create and manage support cases in AWS, including various case types, severity levels, and the process for handling different support requests.\nTypes of Support Cases in AWS In the AWS Management Console, you can create three types of customer support cases:\nAccount and Billing Support\nAvailable to all AWS customers for billing and account-related inquiries. Service Limit Increases\nAvailable to all AWS customers. For more information on default service quotas (limits), see the AWS service quotas documentation. Technical Support Cases\nAvailable to customers on Developer, Business, Enterprise On-Ramp, or Enterprise Support plans. Not available for Basic Support plans. Notes:\nTo change your support plan, see Changing AWS Support Plans. To close your account, refer to Closing an Account. For common troubleshooting topics, check the troubleshooting resources. How to Create a Support Case Sign in to the AWS Support Center.\nTip: In the AWS Management Console, click the question mark icon ( ? ) and select Support Center.\nChoose Create case.\nSelect the case type:\nAccount and billing Technical For service quota increases, select Looking for service limit increases? and follow the instructions. Select the Service, Category, and Severity level.\nTip: AWS provides recommended solutions for commonly asked questions.\nProvide the following details:\nSubject: Title for your case. Description: Describe the issue including error messages, troubleshooting steps, and how you\u0026rsquo;re accessing the service (Console, CLI, API). (Optional) Attach files: Add error logs, screenshots, etc., up to 3 files (maximum 5 MB each). Choose Next step: Solve now or contact us.\nOn the Contact us page, select your preferred language and contact method:\nWeb: Reply in Support Center. Chat: Live chat with a support agent. Phone: Receive a call from a support agent (enter country, phone number, and optional extension). Notes:\nContact options depend on the case type and support plan. You can cancel a support case draft by selecting Discard draft. For Business, Enterprise On-Ramp, or Enterprise Support plans, additional contact options allow you to notify others of status changes. Review your case details and select Submit. The case ID and summary will be displayed. Describing Your Issue Provide as much detail as possible, including relevant AWS resources, timestamps, logs, and environment descriptions to increase the chances of a quick resolution.\nSeverity Levels and Response Times Choose severity levels based on the impact on your applications. Higher severities are for critical issues with no workarounds.\nSeverity Severity Code First Response Time Description (Support Plans) General guidance Low 24 hours General development questions or feature requests (Developer, Business, Enterprise On-Ramp, Enterprise Support) System impaired Normal 12 hours Non-critical functions behaving abnormally (Developer, Business, Enterprise On-Ramp, Enterprise Support) Production system impaired High 4 hours Important application functions are impaired or degraded (Business, Enterprise On-Ramp, Enterprise Support) Production system down Urgent 1 hour Significant business impact, important functions unavailable (Business, Enterprise On-Ramp, Enterprise Support) Business-critical system down Critical 15 minutes Critical business functions unavailable (Enterprise Support), 30 minutes for Enterprise On-Ramp Support Note: Severity codes cannot be changed after creating a case. If your situation changes, work with the AWS Support agent.\nResponse Times and Support Hours AWS aims to respond within the specified timeframes for each severity level. For Business, Enterprise On-Ramp, or Enterprise Support, 24/7 access is available. Developer Support response times are calculated in business hours (typically 8:00 AM - 6:00 PM local time, excluding weekends and holidays).\nFor details on AWS Support features, see the AWS Support features page.\nMultilingual Support AWS offers support in various languages for different support levels:\nJapanese: 24/7 technical support for Business, Enterprise On-Ramp, and Enterprise plans. Developer support available during Japanese business hours. Chinese: 24/7 technical support for Business, Enterprise On-Ramp, and Enterprise plans. Developer support available during Chinese business hours. Korean: 24/7 technical support for Business, Enterprise On-Ramp, and Enterprise plans. Developer support available during Korean business hours. "
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]